{"version":3,"sources":["components/Card.js","components/CardList.js","robots.js","components/SearchBox.js","components/Scroll.js","containers/App.js","components/errorboundary.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","Component","onSearchChange","event","setState","target","value","state","this","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAceA,EAXF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACzB,OACC,sBAAKC,UAAU,+CAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCYOK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHZS,SCVAH,EAAS,CACpB,CACEL,GAAI,EACJF,KAAM,iBACNW,SAAU,QACVV,MAAO,yBAET,CACEC,GAAI,EACJF,KAAM,gBACNW,SAAU,aACVV,MAAO,wBAET,CACEC,GAAI,EACJF,KAAM,gBACNW,SAAU,UACVV,MAAO,gCAET,CACEC,GAAI,EACJF,KAAM,aACNW,SAAU,SACVV,MAAO,kCAET,CACEC,GAAI,EACJF,KAAM,WACNW,SAAU,gBACVV,MAAO,8BAET,CACEC,GAAI,EACJF,KAAM,mBACNW,SAAU,WACVV,MAAO,4BAET,CACEC,GAAI,EACJF,KAAM,qBACNW,SAAU,QACVV,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,oBACNW,SAAU,YACVV,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,iBACNW,SAAU,SACVV,MAAO,sBAET,CACEC,GAAI,GACJF,KAAM,UACNW,SAAU,OACVV,MAAO,6BC5CIW,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC/B,OACC,qBAAKX,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVY,KAAK,SACLC,YAAY,sBACZC,SAAUH,OCACI,G,MAPA,SAACC,GACf,OACC,qBAAKC,MAAS,CAAEC,UAAW,SAAUC,OAAO,iBAAkBC,OAAO,SAArE,SACEJ,EAAMK,aC0CKC,GC7CaC,Y,kDDS3B,aAAe,IAAD,8BACb,gBAaFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAChB,YAAae,EAAME,OAAOC,SAbxC,EAAKC,MAAQ,CACZzB,OAAQA,EACRM,YAAY,IAJA,E,qDAkBN,IAAD,EACyBoB,KAAKD,MAA7BzB,EADD,EACCA,OAAQM,EADT,EACSA,YACVqB,EAAiB3B,EAAO4B,QAAO,SAAAC,GACpC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASzB,EAAYwB,kBAEtD,OACC,sBAAKlC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWW,aAAemB,KAAKN,iBAC/B,cAAC,EAAD,UACC,wCACC,cAAC,EAAD,CAAUpB,OAAQ2B,e,GA9BJR,cEEHa,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d5466437.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nconst Card = ({name,email,id}) =>{\r\n\treturn (\r\n\t\t<div className=\" tc coolor dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((user, i) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey = {i}\r\n\t\t\t\t\t\tid = {robots[i].id}\r\n\t\t\t\t\t\tname = {robots[i].name}\r\n\t\t\t\t\t\temail = {robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CardList;","export const robots = [\n  {\n    id: 1,\n    name: 'Uzumaki Naruto',\n    username: 'Ramen',\n    email: 'rasengan@konoha.jutsu'\n  },\n  {\n    id: 2,\n    name: 'Uchiha Sasuke',\n    username: 'Amateratsu',\n    email: 'chidori@konoha.jutsu'\n  },\n  {\n    id: 3,\n    name: 'Haruno Sakura',\n    username: 'Useless',\n    email: 'slug@pitifulkonoha.weakjutsu'\n  },\n  {\n    id: 4,\n    name: 'Sand Gaara',\n    username: 'Desert',\n    email: 'desertcoffin@sunagakure.strong'\n  },\n  {\n    id: 5,\n    name: 'Rock Lee',\n    username: 'Taijutsu-Lord',\n    email: 'determination@konoha.jutsu'\n  },\n  {\n    id: 6,\n    name: 'Mr Uchiha Madara',\n    username: 'Mangekyo',\n    email: 'sharingan@tsukuyomi.info'\n  },\n  {\n    id: 7,\n    name: 'Mr Hashirama Senju',\n    username: 'Golem',\n    email: 'woody@strongest.shinobi'\n  },\n  {\n    id: 8,\n    name: 'Mr Hatake Kakashi',\n    username: 'Copy-that',\n    email: 'raikiri@sharingan.jutsu'\n  },\n  {\n    id: 9,\n    name: 'Nara Shikamaru',\n    username: 'Shadow',\n    email: 'smart@lazy.shinobi'\n  },\n  {\n    id: 10,\n    name: 'Jiraiya',\n    username: 'Jiji',\n    email: 'toad@almostthechosen.one'\n  }\n];\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='Search robo-shinobi' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{ overflowY: 'scroll', border:'1px solid grey', height:'500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\nexport default Scroll","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport {robots} from '../robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport errorboundary from '../components/errorboundary'\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: robots,\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\t// componentDidMount(){\r\n\t// fetch('https://jsonplaceholder.typicode.com/users')\r\n\t// \t.then(response => response.json())\r\n\t// \t.then(users => {this.setState({ robots: users})});\r\n\t// }\r\n\r\nonSearchChange = (event) =>{\r\n\tthis.setState({searchfield: event.target.value});\r\n\r\n}\r\nrender(){\r\n\tconst { robots, searchfield } = this.state;\r\n\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\treturn (\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>Robogakure</h1>\r\n\t\t<SearchBox searchChange ={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t\t<errorboundary>\r\n\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t</errorboundary>\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({ hasError: true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError){\r\n\t\t\treturn <h1>Ooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}